openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Movies
servers:
  - url: http://movies.swagger.io/v1
paths:
  /movies:
    get:
      summary: List all movies
      operationId: listMovies
      tags:
        - movies
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of movies
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movies"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a movie
      operationId: createMovies
      tags:
        - movies
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /movies/{movieId}:
    get:
      summary: Info for a specific movie
      operationId: showMovieById
      tags:
        - movies
      parameters:
        - name: movieId
          in: path
          required: true
          description: The id of the movie to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movie"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Movie:
      type: object
      required:
        - id
        - title
        - director
        - year
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        director:
          type: string
        year:
          type: integer
          format: int32
    Movies:
      type: array
      items:
        $ref: "#/components/schemas/Movie"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
